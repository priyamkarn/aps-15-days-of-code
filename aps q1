#include <iostream>
#include <vector>

using namespace std;

int solve(int n, int k) {
    int current_index = 0;
    int kill_index = k - 1;
    int direction = 1; // 1 for clockwise, -1 for anticlockwise
    vector<int> goats(n);

    for (int i = 0; i < n; i++) {
        goats[i] = i + 1;
    }

    while (goats.size() > 1) {
        goats.erase(goats.begin() + kill_index);
        if (goats.size() == 1) {
            return goats[0];
        }
        if (direction == 1) {
            kill_index = (kill_index + k - 1) % goats.size();
        } else {
            kill_index = (kill_index - k) % goats.size();
            if (kill_index < 0) {
                kill_index += goats.size();
            }
        }
        if ((direction == 1 && kill_index == goats.size()) || (direction == -1 && kill_index == 0)) {
            direction = -direction;
        }
        current_index++;
    }

    return goats[0];
}

int main() {
    int n, k;
    cout << "Enter the number of goats: ";
    cin >> n;
    cout << "Enter the kth position: ";
    cin >> k;
    int last_survivor = solve(n, k);
    cout << "The last survivor is goat number " << last_survivor << endl;
    return 0;
}
